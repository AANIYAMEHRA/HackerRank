Given an array of bird sightings where every element represents a bird type id, determine the id of the most frequently sighted type. If more than 1 type has been spotted that maximum amount, return the smallest of their ids.

Example

There are two each of types  and , and one sighting of type . Pick the lower of the two types seen twice: type .

Function Description

Complete the migratoryBirds function in the editor below.

migratoryBirds has the following parameter(s):

int arr[n]: the types of birds sighted
Returns

int: the lowest type id of the most frequently sighted birds
Input Format

The first line contains an integer, , the size of .
The second line describes  as  space-separated integers, each a type number of the bird sighted.

Constraints

It is guaranteed that each type is , , , , or .
Sample Input 0

6
1 4 4 4 5 3
Sample Output 0

4


CODE //


int migratoryBirds(vector<int> arr) {
    vector<int> freq(6, 0); // since bird type IDs range from 1 to 5

    // Count frequency of each bird type
    for (int id : arr) {
        freq[id]++;
    }

    int max_count = 0;
    int bird_id = 1;

    // Find the bird type with the highest frequency (smallest ID in case of tie)
    for (int i = 1; i <= 5; ++i) {
        if (freq[i] > max_count) {
            max_count = freq[i];
            bird_id = i;
        }
    }

    return bird_id;
}
